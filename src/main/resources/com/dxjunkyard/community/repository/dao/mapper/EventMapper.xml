<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxjunkyard.community.repository.dao.mapper.EventMapper">
    <insert id="addEvent" useGeneratedKeys="true" keyProperty="id">
        insert into Events(
                        title
                          ,community_id
                          ,owner_id
                          ,event_start
                          ,event_end
                          ,application_start
                          ,application_end
                          ,recruitment_message
                          ,description
                          ,place_id
                          ,visibility
                          ,status)
        values(
              #{title}
              ,#{communityId}
              ,#{ownerId}
              ,#{eventStart}
              ,#{eventEnd}
              ,#{applicationStart}
              ,#{applicationEnd}
              ,#{recruitmentMessage}
              ,#{description}
              ,#{placeId}
              ,#{visibility}
              ,#{status})
    </insert>
    <select id="getEventList" resultType="com.dxjunkyard.community.domain.Events">
        select
            id
             , title
             , community_id as communityId
             , owner_id as ownerId
             , event_start as eventStart
             , event_end as eventEnd
             , application_start as applicationStart
             , application_end as applicationEnd
             , recruitment_message as recruitmentMessage
             , description as description
             , place_id as placeId
             , visibility as visibility
             , status as status
        from Events
    </select>
    <select id="searchEvent" resultType="com.dxjunkyard.community.domain.Events">
        select
            id
             , title
             , community_id as communityId
             , owner_id as ownerId
             , event_start as eventStart
             , event_end as eventEnd
             , application_start as applicationStart
             , application_end as applicationEnd
             , recruitment_message as recruitmentMessage
             , description as description
             , place_id as placeId
             , visibility as visibility
             , status as status
        from Events
        where
            title LIKE CONCAT('%',#{keyword},'%') or description LIKE CONCAT('%',#{keyword},'%') or recruitment_message LIKE CONCAT('%',#{keyword},'%')
    </select>
    <select id="getEvent" resultType="com.dxjunkyard.community.domain.Events">
        select
            id
             , title
             , community_id as communityId
             , owner_id as ownerId
             , event_start as eventStart
             , event_end as eventEnd
             , application_start as applicationStart
             , application_end as applicationEnd
             , recruitment_message as recruitmentMessage
             , description as description
             , place_id as placeId
             , visibility as visibility
             , status as status
        from Events
        where id = #{id}
    </select>
    <!--
    UpcommingEvent event_b = UpcommingEvent.builder()
                .eventId(2L)
                .dateTime(LocalDateTime.of(2024, 11, 8, 15, 1))
                .eventName("テニス大会")
                .communityName("ファイヤーボール")
                .location("テニスコートA")
                .invitationCode("1001")
     -->
    <select id="upcommingEventList" resultType="com.dxjunkyard.community.domain.UpcommingEvent">
        select
            e.id as eventId
             ,e.event_start as dateTime
             ,e.title as eventName
             ,c.name as communityName
             ,f.name as location
             ,i.invitation_code as invitationCode
        from Events e
                 left join Communities c on e.community_id = c.id
                 left join Invitations i on e.id = i.event_id
                 left join Facilities f on e.place_id = f.facility_id
        where e.community_id IN (#{communityIdList})
    </select>
</mapper>
